openapi: 3.0.3
info:
  title: WorkoutApp
  description: 'Workout is an app for building a workout program'
  license:
    name: MIT
  version: 0.0.1
servers:
  - url: https://localhost
tags:
  - name: exercise
    description: CRUDS for an exercise
  - name: workout
    description: CRUDS for a workout program
paths:
  /exercise/init:
    $ref: './spec-workout-api-exercise.yaml#/paths/~1init'
  /exercise/create:
    $ref: './spec-workout-api-exercise.yaml#/paths/~1create'
  /exercise/read:
    $ref: './spec-workout-api-exercise.yaml#/paths/~1read'
  /exercise/update:
    $ref: './spec-workout-api-exercise.yaml#/paths/~1update'
  /exercise/delete:
    $ref: './spec-workout-api-exercise.yaml#/paths/~1delete'
  /exercise/search:
    $ref: './spec-workout-api-exercise.yaml#/paths/~1search'
  /workout/init:
    $ref: './spec-workout-api-workout.yaml#/paths/~1init'
  /workout/create:
    $ref: './spec-workout-api-workout.yaml#/paths/~1create'
  /workout/read:
    $ref: './spec-workout-api-workout.yaml#/paths/~1read'
  /workout/update:
    $ref: './spec-workout-api-workout.yaml#/paths/~1update'
  /workout/delete:
    $ref: './spec-workout-api-workout.yaml#/paths/~1delete'
  /workout/search:
    $ref: './spec-workout-api-workout.yaml#/paths/~1search'
  /workout/chainOfExercises:
    $ref: './spec-workout-api-workout.yaml#/paths/~1chainOfExercises'

components:
  schemas:

    BaseMessage:
      type: object
      description: Base class to requests and responses
      properties:
        messageType:
          description: A discriminator containing the message class type and used to deserialization
          type: string
          title: Discriminator
          example: CreateExerciseRequest
      discriminator:
        propertyName: messageType

    BaseRequest:
      type: object
      description: Base class to all requests
      properties:
        requestId:
          type: string
          description: The id of request entity
          example: "eID:0001"

    BaseResponse:
      type: object
      description: Base class to all responses
      properties:
        requestId:
          type: string
        result:
          type: string
          enum:
            - success
            - error
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RequestError'

    RequestError:
      type: object
      description: Description of request processing error
      properties:
        message:
          type: string
        field:
          type: string

    BaseDebugRequest:
      type: object
      properties:
        mode:
          type: string
          default: prod
          enum:
            - prod
            - test
            - stub

    Permissions:
      type: string
      enum:
        - create
        - read
        - update
        - delete
        - send