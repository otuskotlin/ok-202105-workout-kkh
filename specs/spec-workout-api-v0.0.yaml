openapi: 3.0.3
info:
  title: Workout
  description: 'Workout is an app for building a workout program'
  license:
    name: MIT
  version: 0.0.1
servers:
  - url: https://localhost
tags:
  - name: exercise
    description: CRUDS for an exercise
  - name: workout
    description: CRUDS for a workout program
paths:
  /exercise/init:
    post:
      tags:
        - exercise
      summary: Get status on initialization
      operationId: initExercise
      requestBody:
        description: The request object to an initialization on start application
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitExerciseRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitExerciseResponse'
  /exercise/create:
    post:
      tags:
        - exercise
      summary: Create a new exercise
      operationId: createExercise
      requestBody:
        description: The request object to create a new exercise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExerciseRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExerciseResponse'
  /exercise/read:
    post:
      tags:
        - exercise
      summary: Get information about an exercise
      operationId: readExercise
      requestBody:
        description: The request object to obtain an exercise information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadExerciseRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadExerciseResponse'
  /exercise/update:
    post:
      tags:
        - exercise
      summary: Update information about an exercise
      operationId: updateExercise
      requestBody:
        description: The request object to update an exercise information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExerciseRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateExerciseResponse'
  /exercise/delete:
    post:
      tags:
        - exercise
      summary: Delete an exercise
      operationId: deleteExercise
      requestBody:
        description: The request object to delete an exercise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExerciseRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteExerciseResponse'
  /exercise/search:
    post:
      tags:
        - exercise
      summary: Search the exercises
      operationId: searchExercise
      requestBody:
        description: The request object to search the exercises
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchExerciseRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchExerciseResponse'
  /workout/init:
    post:
      tags:
        - workout
      summary: Get status on initialization
      operationId: initWorkout
      requestBody:
        description: The request object to an initialization on start application
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitWorkoutRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitExerciseResponse'
  /workout/create:
    post:
      tags:
        - workout
      summary: Create a new workout
      operationId: createWorkout
      requestBody:
        description: The request object to create a new workout
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkoutRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkoutResponse'
  /workout/read:
    post:
      tags:
        - workout
      summary: Get information about a workout
      operationId: readWorkout
      requestBody:
        description: The request object to obtain a workout information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadWorkoutRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadWorkoutResponse'
  /workout/update:
    post:
      tags:
        - workout
      summary: Update information about a workout
      operationId: updateWorkout
      requestBody:
        description: The request object to update a workout information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkoutRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkoutResponse'
  /workout/delete:
    post:
      tags:
        - workout
      summary: Delete a workout
      operationId: deleteWorkout
      requestBody:
        description: The request object to delete a workout
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteWorkoutRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkoutResponse'
  /workout/search:
    post:
      tags:
        - workout
      summary: Search the workout
      operationId: searchWorkout
      requestBody:
        description: The request object to search the workout
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchWorkoutRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchWorkoutResponse'
  /workout/chainOfExercise:
    post:
      tags:
        - workout
      summary: Get exercise sequence
      operationId: chainOfExercise
      requestBody:
        description: The request object to get sequence of exercise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadWorkoutRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainOfExerciseResponse'


components:
  schemas:

    BaseMessage:
      type: object
      description: Base class to requests and responses
      properties:
        messageType:
          description: A discriminator containing the message class type and used to deserialization
          type: string
          title: Discriminator
      discriminator:
        propertyName: messageType

    BaseRequest:
      type: object
      description: Base class to all requests
      properties:
        requestId:
          type: string

    BaseResponse:
      type: object
      description: Base class to all responses
      properties:
        requestId:
          type: string
        result:
          type: string
          enum:
            - success
            - error
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RequestError'

    RequestError:
      type: object
      description: Description of request processing error
      properties:
        message:
          type: string
        field:
          type: string

    BaseDebugRequest:
      type: object
      properties:
        mode:
          type: string
          default: prod
          enum:
            - prod
            - test
            - stub

    CreatableExercise:
      type: object
      description: The structure with data about the exercise to request about creation
      properties:
        title:
          type: string
          description: Название упражнения
        description:
          type: string
        targetMuscleGroup:
          type: array
          items:
            type: string
        synergisticMuscleGroup:
          type: array
          items:
            type: string
        executionTechnique:
          type: string

    CreatableWorkout:
      description: The structure with data about the workout to request about creation
      type: object
      properties:
        date:
          type: string
          format: date
          description: Date of workout
          example: 2021-08-04
        duration:
          type: number
          format: double
          description: Duration of workout
        recoveryTime:
          type: number
          format: double
          description: Recovery time between exercises
        modificationWorkout:
          type: string
          enum:
            - CLASSIC
            - CIRCUIT
        exercisesBlock:
          type: array
          items:
            $ref: '#/components/schemas/ExercisesBlock'

    ExercisesBlock:
      type: object
      properties:
        exercise:
          $ref: '#/components/schemas/ResponseExercise'
        sets:
          type: array
          items:
            $ref: '#/components/schemas/OneSet'
        modificationBlockExercises:
          type: string
          enum:
            - NONE
            - WITHOUT_LAST_RIGHT
            - WITHOUT_LAST_LEFT

    OneSet:
      type: object
      properties:
        performance:
          type: array
          items:
            $ref: '#/components/schemas/Performance'
        status:
          type: string
          enum:
            - PLAN
            - ACTIVE
            - DONE
            - SKIP
        modificationExercise:
          type: string
          enum:
            - NONE
            - CLUSTER
            - DROP_SET
            - SUPER_SET_RIGHT
            - SUPER_SET_LEFT

    Performance:
      type: object
      properties:
        weight:
          type: number
          format: double
        measure:
          type: string
          enum:
            - KG
            - LB
        repetition:
          type: integer

    UpdatableExercise:
      description: Structure for a data about the exercise in request to update
      allOf:
        - $ref: '#/components/schemas/CreatableExercise'
        - type: object
          properties:
            id:
              type: string

    UpdatableWorkout:
      description: Structure for a data about the workout in request to update
      allOf:
        - $ref: '#/components/schemas/CreatableWorkout'
        - type: object
          properties:
            id:
              type: string

    Permissions:
      type: string
      enum:
        - create
        - read
        - update
        - delete
        - send

    InitExerciseRequest:
      description: Structure to request the initial state when starting the web client
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object

    InitExerciseResponse:
      description: Structure to respond with the initial state when starting the web client
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object

    InitWorkoutRequest:
      description: Structure to request the initial state when starting the web client
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object

    InitWorkoutResponse:
      description: Structure to respond with the initial state when starting the web client
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object

    CreateExerciseRequest:
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            createExercise:
              $ref: '#/components/schemas/CreatableExercise'
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - nameEmpty
                        - errorDb

    CreateWorkoutRequest:
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            createWorkout:
              $ref: '#/components/schemas/CreatableWorkout'
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - nameEmpty
                        - errorDb

    CreateExerciseResponse:
      description: The structure to respond to a request about the declaration an exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            createdExercise:
              $ref: '#/components/schemas/ResponseExercise'

    CreateWorkoutResponse:
      description: The structure to respond to a request about the declaration a workout
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            createdWorkout:
              $ref: '#/components/schemas/ResponseWorkout'

    ResponseExercise:
      description: The structure describing the exercise in the response
      allOf:
        - $ref: '#/components/schemas/UpdatableExercise'
        - type: object
          properties:
            permissions:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Permissions'

    ResponseWorkout:
      description: The structure describing the workout in the response
      allOf:
        - $ref: '#/components/schemas/UpdatableWorkout'
        - type: object
          properties:
            permissions:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Permissions'

    ReadExerciseRequest:
      description: The structure to get exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            readExerciseId:
              type: string
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - errorDb

    ReadWorkoutRequest:
      description: The structure to get workout
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            readWorkoutId:
              type: string
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - errorDb

    ReadExerciseResponse:
      description: The structure to respond to a request with an exercise information
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            readExercise:
              $ref: '#/components/schemas/ResponseExercise'

    ReadWorkoutResponse:
      description: The structure to respond to a request with a workout information
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            readWorkout:
              $ref: '#/components/schemas/ResponseWorkout'

    UpdateExerciseRequest:
      description: Structure for request an update to an existing exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            updateExercise:
              $ref: '#/components/schemas/UpdatableExercise'
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyTitle
                        - errorDb

    UpdateWorkoutRequest:
      description: Structure for request an update to an existing workout
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            updateWorkout:
              $ref: '#/components/schemas/UpdatableWorkout'
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyTitle
                        - errorDb

    UpdateExerciseResponse:
      description: The structure to respond to a request with an exercise information
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            updateExercise:
              $ref: '#/components/schemas/ResponseExercise'

    UpdateWorkoutResponse:
      description: The structure to respond to a request with a workout information
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            updateWorkout:
              $ref: '#/components/schemas/ResponseWorkout'

    DeleteExerciseRequest:
      description: The structure to request to delete an exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            deleteExerciseId:
              type: string
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - errorDb

    DeleteWorkoutRequest:
      description: The structure to request to delete a workout
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            deleteWorkoutId:
              type: string
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - errorDb

    DeleteExerciseResponse:
      description: Structure to respond to a request to delete an exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            deleteExercise:
              $ref: '#/components/schemas/ResponseExercise'

    DeleteWorkoutResponse:
      description: Structure to respond to a request to delete a workout
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            deleteWorkout:
              $ref: '#/components/schemas/ResponseWorkout'

    SearchExerciseRequest:
      description: Structure to request a search of an exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            search:
              type: string

    SearchExerciseResponse:
      description: Structure to respond to a request search of exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            foundExercises:
              type: array
              items:
                $ref: '#/components/schemas/ResponseExercise'

    SearchWorkoutRequest:
      description: Structure to request a search of an exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            date:
              type: string
              format: date
              description: Date of workout
              example: 2021-08-04
            searchMuscleGroup:
              type: string
              description: Text of search of a muscle group
            searchExercise:
              type: string
              description: Text of search of an exercise in workouts

    SearchWorkoutResponse:
      description: Structure to respond to a request search of workout
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            foundWorkouts:
              type: array
              items:
                $ref: '#/components/schemas/ResponseWorkout'

    ChainOfExerciseRequest:
      description: Structure to request to get a chain of exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            readWorkoutId:
              type: string
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - errorDb

    ChainOfExerciseResponse:
      description: Structure to respond to a request to get a chain of exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            chainOfExercise:
              type: array
              items:
                $ref: '#/components/schemas/ResponseExercise'
