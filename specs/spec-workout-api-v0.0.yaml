openapi: 3.0.3
info:
  title: Workout
  description: 'Workout is an app for building a workout program'
  license:
    name: MIT
  version: 0.0.1
servers:
  - url: https://localhost
tags:
  - name: exercise
    description: CRUDS for an exercise
  - name: workout
    description: CRUDS for a workout program
paths:
  /exercise/init:
    post:
      tags:
        - exercise
      summary: Get status on initialization
      operationId: initExercise
      requestBody:
        description: The request object to an initialization on start application
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitExerciseRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitExerciseResponse'
  /exercise/create:
    post:
      tags:
        - exercise
      summary: Create a new exercise
      operationId: createExercise
      requestBody:
        description: The request object to create a new exercise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExerciseRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExerciseResponse'
  /exercise/read:
    post:
      tags:
        - exercise
      summary: Get information about an exercise
      operationId: readExercise
      requestBody:
        description: The request object to obtain an exercise information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadExerciseRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadExerciseResponse'
  /exercise/update:
    post:
      tags:
        - exercise
      summary: Update information about an exercise
      operationId: updateExercise
      requestBody:
        description: The request object to update an exercise information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExerciseRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateExerciseResponse'
  /exercise/delete:
    post:
      tags:
        - exercise
      summary: Delete an exercise
      operationId: deleteExercise
      requestBody:
        description: The request object to delete an exercise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteExerciseRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteExerciseResponse'
  /exercise/search:
    post:
      tags:
        - exercise
      summary: Search the exercises
      operationId: searchExercise
      requestBody:
        description: The request object to search the exercises
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchExerciseRequest'
        required: true
      responses:
        200:
          description: All responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchExerciseResponse'

components:
  schemas:

    BaseMessage:
      type: object
      description: Base class to requests and responses
      properties:
        messageType:
          description: A discriminator contaiting the message class type and used to deserialization
          type: string
          title: Discriminator
      discriminator:
        propertyName: messageType

    BaseRequest:
      type: object
      description: Base class to all requests
      properties:
        requestId:
          type: string

    BaseResponse:
      type: object
      description: Base class to all responses
      properties:
        result:
          type: string
          enum:
            - success
            - error
        errors:
          type: array
          items:
            $ref: '#/components/schemas/RequestError'

    RequestError:
      type: object
      description: Description of request processing error
      properties:
        message:
          type: string
        field:
          type: string

    BaseDebugRequest:
      type: object
      properties:
        mode:
          type: string
          default: prod
          enum:
            - prod
            - test
            - stub

    BasePaginatedRequest:
      type: object
      description: The structure with a description of a requested page in requests of lists
      properties:
        size:
          type: integer
          description: The size of a requested page
          format: int32
        lastId:
          type: string
          description: ID of the last object of the previous page

    BasePaginatedResponse:
      type: object
      description: The structure with a description of a page in request
      properties:
        size:
          type: integer
          description: The size of a requested page
          format: int32
        lastId:
          type: string
          description: ID of the last object of the previous page
        position:
          type: string
          enum:
            - first
            - middle
            - last

    CreatableExercise:
      type: object
      description: The structure with data about the exercise to request about creation
      properties:
        title:
          type: string
          description: Название упражнения
        description:
          type: string
        targetMuscleGroup:
          type: array
          items:
            type: string
        synergisticMuscleGroup:
          type: array
          items:
            type: string
        executionTechnique:
          type: string


    CreatableWorkout:
      description: The structure with data about the workout to request about creation
      type: object
      properties:
        date:
          type: string
          format: date
          description: Date of workout
          example: "2021-08-04"
        duration:
          type: number
          format: double
          description: Duration of workout
        recoveryTime:
          type: number
          format: double
          description: Recovery time between exercises
        exercises:
          $ref: '#/components/schemas/Exercises'

    Exercises:
      type: object
      additionalProperties:
        type: object
        properties:
          exercise:
            $ref: '#/components/schemas/CreatableExercise'
          doingTheExercise:
            $ref: '#/components/schemas/DoingTheExercise'

    DoingTheExercise:
      type: object
      properties:
        status:
          type: string
          enum:
            - PLAN
            - ACTIVE
            - DONE
            - SKIP
        sets:
          $ref: '#/components/schemas/Sets'
        modification:
          type: string

    OneSet:
      type: object
      properties:
        weight:
          type: number
          format: double
        repetition:
          type: number
          format: int32

    Sets:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/OneSet'

    UpdatableExercise:
      description: Structure for a data about the declaration in request to update
      allOf:
        - $ref: '#/components/schemas/CreatableExercise'
        - type: object
          properties:
            id:
              type: string

    ResultExercise:
      allOf:
        - $ref: '#/components/schemas/UpdatableExercise'
        - type: object
          properties:
            permissions:
              type: array
              items:
                $ref: '#/components/schemas/ExercisePermissions'

    ExercisePermissions:
      type: string
      enum:
        - read
        - update
        - delete
        - send

    InitExerciseRequest:
      description: Structure to request the initial state when starting the web client
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object

    InitExerciseResponse:
      description: Structure to respond with the initial state when starting the web client
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object

    CreateExerciseRequest:
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            createExercise:
              $ref: '#/components/schemas/CreatableExercise'
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - nameEmpty
                        - errorDb

    CreateExerciseResponse:
      description: The structure to respond to a request about the declaration an exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            createdExercise:
              $ref: '#/components/schemas/ResultExercise'

    ResponseExercise:
      description: The structure describing the declaration in the response
      allOf:
        - $ref: '#/components/schemas/UpdatableExercise'
        - type: object
          properties:
            permissions:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/ExercisePermissions'

    ReadExerciseRequest:
      description: The structure to get exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            readExerciseId:
              type: string
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - errorDb

    ReadExerciseResponse:
      description: The structure to respond to a request with an exercise information
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            readExercise:
              $ref: '#/components/schemas/ResponseExercise'

    UpdateExerciseRequest:
      description: Structure for request an update to an existing exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            createExercise:
              $ref: '#/components/schemas/UpdatableExercise'
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyTitle
                        - errorDb

    UpdateExerciseResponse:
      description: The structure to respond to a request with an exercise information
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            updateExercise:
              $ref: '#/components/schemas/ResponseExercise'

    DeleteExerciseRequest:
      description: The structure to request to delete an exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            deleteExerciseId:
              type: string
            debug:
              allOf:
                - $ref: '#/components/schemas/BaseDebugRequest'
                - type: object
                  properties:
                    stub:
                      type: string
                      enum:
                        - success
                        - emptyId
                        - errorDb

    DeleteExerciseResponse:
      description: Structure to respond to a request to delete an exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            deleteExercise:
              $ref: '#/components/schemas/ResponseExercise'

    SearchExerciseRequest:
      description: Structure to request a search of an exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            page:
              $ref: '#/components/schemas/BasePaginatedRequest'

    SearchExerciseResponse:
      description: Structure to respond to a request search of exercise
      allOf:
        - $ref: '#/components/schemas/BaseMessage'
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            page:
              $ref: '#/components/schemas/BasePaginatedResponse'
            foundExercises:
              type: array
              items:
                $ref: '#/components/schemas/ResponseExercise'